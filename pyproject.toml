[tool.poetry]
name = "Chepong"
version = "0.1.0"
description = ""
authors = ["Paul Hutchins <hutchinsp01@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
Django = "^4.1.7"
nitpick = "^0.32.0"
black = "^23.1.0"
django-bootstrap-v5 = "^1.0.11"
django-extensions = "^3.2.1"
psycopg2-binary = "^2.9.5"
django-dramatiq = "^0.11.2"
django-dramatiq-pg = "^1.3.2"
dj-database-url = "^1.2.0"
watchdog = "^2.3.1"
pytest = "^7.2.2"
pytest-django = "^4.5.2"
pytest-cov = "^4.0.0"
isort = "^5.12.0"
ruff = "^0.0.257"
mypy = "^1.1.1"
django-stubs = "^1.16.0"
whitenoise = "^6.4.0"

[tool.nitpick]
# Generated by the 'nitpick init' command
# More info at https://nitpick.rtfd.io/en/latest/configuration.html
style = [
    'https://raw.githubusercontent.com/uptick/.github/main/nitpick/python.toml',
    'py://nitpick/resources/any/commitizen',
]

[tool.black]
target-version = ["py310"]
include = "\\.pyi?$"
preview = true
force_exclude = "(\n  /(\n    | migrations\n  )/\n  | urls\\.py\n)\n"
line-length = 120

[tool.ruff]
line-length = 120

# Enable Pyflakes `E` and `F` codes by default.
select = [
    "F",   # Pyflakes
    "E",   # Pycodestyle
    "W",   # Pycodestyle
    "C90", # Mccabe complexity
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "S",   # bandit (security)
    "DTZ", # Enforce good datetime
    "BLE", # Blind exceptions
]

ignore = [
    "E501", # Line length is done by black
    "D202", # NoBlankLineAfterFunction
    "S101", # Use of `assert` detected
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
